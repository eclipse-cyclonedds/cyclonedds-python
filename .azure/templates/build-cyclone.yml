#
# Copyright(c) 2021 to 2022 ZettaScale Technology and others
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v. 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0, or the Eclipse Distribution License
# v. 1.0 which is available at
# http://www.eclipse.org/org/documents/edl-v10.php.
#
# SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause
#

#
# Template to build and cache CycloneDDS for use in python testing
#

steps:
  - task: UsePythonVersion@0
  - bash: |
      [[ -n "${ARCH}" ]] || \
        echo "###vso[task.setvariable variable=arch;]x86_64"
    name: setup
    displayName: Check the build type.
  - bash: |
      git clone https://github.com/eclipse-cyclonedds/cyclonedds.git cyclonedds_c --branch master
    name: clone_cyclone
    displayName: Clone the CycloneDDS repository
  - task: Cache@2
    inputs:
      key: cyclonedds_build | 5 | $(Agent.OS) | Release | cyclonedds_c/.git/refs/heads/master
      path: cyclone-$(Agent.OS)-Release
      cacheHitVar: CACHE_RESTORED
    name: cyclonedds_cache
    displayName: Check for a build cache
  - bash: |
      sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setglobalstate off
    condition: and(eq(variables['Agent.OS'], 'Darwin'), ne(variables.CACHE_RESTORED, 'true'))
    name: setup_macos
    displayName: Setup for MacOS builds
  - pwsh: |
      $python_bin = python -m site --user-base
      # Visual Studio is most likely used on Windows agents
      Write-Host "###vso[task.setvariable variable=GENERATOR;]Visual Studio 17 2022"
      if (${env:ARCH} -match "arm*") {
        Write-Host "###vso[task.setvariable variable=platform;]ARM"
      } elseif (${env:ARCH} -eq "x86") {
        Write-Host "###vso[task.setvariable variable=platform;]Win32"
      } else {
        Write-Host "###vso[task.setvariable variable=platform;]x64"
      }
      Write-Host "###vso[task.setvariable variable=build_tool_options;]-nologo"
    condition: and(eq(variables['Agent.OS'], 'Windows_NT'), ne(variables.CACHE_RESTORED, 'true'))
    name: setup_windows
    displayName: Setup for Windows builds
  - bash: |
      set -e -x
      mkdir -p cyclonedds_c/build cyclone-$(Agent.OS)-Release
      cd cyclonedds_c/build
      cmake -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=../../cyclone-$(Agent.OS)-Release \
            ${GENERATOR:+-G} "${GENERATOR}" -A "${PLATFORM}" ..
      cmake --build . --config Release --target install --parallel -- ${BUILD_TOOL_OPTIONS}
    name: cyclonedds_build
    displayName: Build CycloneDDS
    condition: ne(variables.CACHE_RESTORED, 'true')
