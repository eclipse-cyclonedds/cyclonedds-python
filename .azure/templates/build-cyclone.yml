#
# Copyright(c) 2021 ADLINK Technology Limited and others
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v. 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0, or the Eclipse Distribution License
# v. 1.0 which is available at
# http://www.eclipse.org/org/documents/edl-v10.php.
#
# SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause
#

#
# Template to build and cache CycloneDDS for use in python testing
#

steps:
  - bash: |
      git clone https://github.com/eclipse-cyclonedds/cyclonedds.git
    name: clone_cyclone
    displayName: Clone the CycloneDDS repository
  - bash: |
      [[ -n "${BUILD_TYPE}" ]] || \
        echo "###vso[task.setvariable variable=build_type;]RelWithDebugInfo"
    name: build_type_setter
    displayName: Check the build type.
  - task: Cache@2
    inputs:
      key: cyclonedds_build | 4 | $(Agent.OS) | $(build_type) | cyclonedds/.git/refs/heads/master
      path: cyclone-$(Agent.OS)-$(build_type)
      cacheHitVar: CACHE_RESTORED
    name: cyclonedds_cache
    displayName: Check for a build cache
  - bash: |
      echo "###vso[task.setvariable variable=build_tool_options;]-j 4"
    condition: and(eq(variables['Agent.OS'], 'Linux'), ne(variables.CACHE_RESTORED, 'true'))
    name: setup_linux
    displayName: Setup for Linux builds
  - bash: |
      sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setglobalstate off
      echo "###vso[task.setvariable variable=build_tool_options;]-j 4"
      brew install bison
    condition: and(eq(variables['Agent.OS'], 'Darwin'), ne(variables.CACHE_RESTORED, 'true'))
    name: setup_macos
    displayName: Setup for MacOS builds
  - pwsh: |
      $python_bin = python -m site --user-base
      Write-Host "###vso[task.setvariable variable=build_tool_options;]-nologo -verbosity:minimal -maxcpucount:4 -p:CL_MPCount=4"
      choco install winflexbison3
    condition: and(eq(variables['Agent.OS'], 'Windows_NT'), ne(variables.CACHE_RESTORED, 'true'))
    name: setup_windows
    displayName: Setup for Windows builds
  - bash: |
      set -e -x
      mkdir -p cyclonedds/build cyclone-$(Agent.OS)-$(build_type)
      cd cyclonedds/build
      cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
            -DCMAKE_INSTALL_PREFIX=../../cyclone-$(Agent.OS)-$(build_type) \
            -DENABLE_LIFESPAN=ON \
            -DENABLE_DEADLINE_MISSED=ON \
            -DENABLE_TYPE_DISCOVERY=ON \
            -DENABLE_TOPIC_DISCOVERY=ON \
            ..
      cmake --build . --target install -- ${BUILD_TOOL_OPTIONS}
    name: cyclonedds_build
    displayName: Build CycloneDDS
    condition: ne(variables.CACHE_RESTORED, 'true')
